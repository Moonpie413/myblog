<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WXH</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-02-05T15:26:58.223Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wangxinhua</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VIM中的Operator-Pending</title>
    <link href="http://yoursite.com/2018/02/04/vim-operator-pending-md/"/>
    <id>http://yoursite.com/2018/02/04/vim-operator-pending-md/</id>
    <published>2018-02-04T08:37:17.000Z</published>
    <updated>2018-02-05T15:26:58.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于VIM中的Operator-Pending映射"><a href="#关于VIM中的Operator-Pending映射" class="headerlink" title="关于VIM中的Operator-Pending映射"></a>关于VIM中的Operator-Pending映射</h1><p>VIM已经用了有一年了, 但是这一年来基本上只是用到了最基本的功能, 并没有提高很多自己的码字效率,<br>插件倒是装了一堆却并没有理解为什么,<br>使用着强大的工具却不了解其运作原理总归让人有点不安, 所以趁这两天准备把VIM的基本运作方式搞搞清楚, 顺便给自己的 <em>.vimrc</em> 瘦个身。</p><p>首先, 看的是在线版本的 <a href="&#39;http://learnvimscriptthehardway.stevelosh.com/&#39;">Learn Vim The Hard Way</a></p><p>前几章关于 <em>基本设置</em> , <em>文件类型相关设置</em> , <em>按键映射</em> 方面的章节都还好, 到 <a href="&#39;http://learnvimscriptthehardway.stevelosh.com/chapters/15.html&#39;">operator-padding</a><br>这一章就有点看不懂了, 主要是因为 <em>text-objects</em> 有些不明白, 因此又看了另一篇 <a href="&#39;https://blog.carbonfive.com/2011/10/17/vim-text-objects-the-definitive-guide/&#39;">博客</a>,<br>搞懂了 <em>text-objects</em> 之后再来看就简单多了。</p><h2 id="Text-Objects"><a href="#Text-Objects" class="headerlink" title="Text-Objects"></a>Text-Objects</h2><p>VIM中的 <em>text-objects</em> 是更高效得操作单词、句子、段落的一个作用域对象, 称为 <strong>文本对象</strong></p><p>首先需要了解VIM的命令结构</p><p>VIM中的命令结构如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;number&gt;&lt;command&gt;&lt;text object or motion&gt;</span><br></pre></td></tr></table></figure><ul><li><p><strong>number</strong> 是指作用的文本对象数量, 它是可选的, 并且可以在之前或者之后出现</p></li><li><p><strong>commond</strong> 对文本对象的操作, 如删除、复制等, 它也是可选的, 但如果不指定则该命令就<br>失去了编辑能力</p></li><li><p><strong>text objects or motion</strong> 指文本对象的作用域, 如一个单词(w), 一句话(s), 或一个段落(p)</p></li></ul><p>总的来说 一个命令由以上几部分组成起来, 就可以将基本的修改、移动操作变得更加强大</p><h3 id="文本对象类型"><a href="#文本对象类型" class="headerlink" title="文本对象类型"></a>文本对象类型</h3><p>以下为一些常用的文本对象类型</p><ul><li>iw inner word</li><li>aw a word</li><li>iW inner WORD</li><li>aW a WORD</li><li>is inner sentence</li><li>as a sentence</li><li>ip inner paragraph</li><li>ap a paragraph</li><li>it inner tag</li><li>at a tag</li><li>i  ( or i) inner block</li><li>a  ( or a) a block</li><li>i  &lt; or i&gt; inner block</li><li>a  &lt; or a&gt; a block</li><li>i  { or i} inner block</li><li>a  { or a} a block</li><li>i  [ or i] inner block</li><li>a  [ or a] a block</li><li>i  inner block</li><li>a  a block</li><li>i` inner block</li><li>a` a block</li></ul><p>从列表中可以看出, <em>text objects</em> 不仅可以匹配单词句子, 还可以匹配到括号等变成中经常会用到的<br>符号, 数量使用的话会相当方便</p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><h4 id="普通文本"><a href="#普通文本" class="headerlink" title="普通文本"></a>普通文本</h4><p><code>diw</code> 或 <code>daw</code> 删除当前选中的单词</p><p>其中 <em>d</em> 指 <strong>commond</strong> , 而 <em>iw</em> 则是一个单词类型的文本对象</p><p>注意 <code>diw</code> 只会删除单词, 而 <code>daw</code> 会同时删除单词旁边的空格, 这是因为</p><p><em>iw</em> 表示 <em>inner word</em> 而 <em>aw</em> 表示 <em>a word</em> , 它不仅会选中单词, 还会选中旁边的空格</p><h4 id="程序文本"><a href="#程序文本" class="headerlink" title="程序文本"></a>程序文本</h4><p>如下 <em>html</em> 代码中, 使用 <code>cit</code> 命令可以快速修改两个tag之间的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Operator-Pending"><a href="#Operator-Pending" class="headerlink" title="Operator-Pending"></a>Operator-Pending</h2><p><em>Operator-Pending</em> 中的Operaotr就是上文中的 <strong>commond</strong>,<br>配上 <em>text-object</em> 或者一个 <em>movement</em> 就构成了一个完成的命令</p><h3 id="Movement-映射"><a href="#Movement-映射" class="headerlink" title="Movement 映射"></a>Movement 映射</h3><p>VIM 允许将命令中的 <em>movement</em> 映射到其他按键, 如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:onoremap p i(</span><br></pre></td></tr></table></figure><p>将 <code>i(&#39;</code> 映射到按键p上, 也就是说 <code>dp</code> 等价于 <code>di(</code>, 即删除括号中的内容</p><p>第二个例子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:onoremap b /return&lt;cr&gt;</span><br></pre></td></tr></table></figure><p>执行 <code>db</code>, VIM会删除所有下一个 <code>return</code> 之间的内容</p><p>第三个例子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:onoremap in( :&lt;c-u&gt;normal! f(vi(&lt;cr&gt;</span><br></pre></td></tr></table></figure><p>执行 <code>din(</code> 会删除当前光标所在的后一对 () 中的内容, 其中用到了 <em>normal!</em><br>来模拟命令, 关键点就是 <code>f(</code> 这个命令移动到最近的 <code>(</code> 然后通过 <code>vi(</code> 选中下一个 <code>)</code><br>之间的内容</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于VIM中的Operator-Pending映射&quot;&gt;&lt;a href=&quot;#关于VIM中的Operator-Pending映射&quot; class=&quot;headerlink&quot; title=&quot;关于VIM中的Operator-Pending映射&quot;&gt;&lt;/a&gt;关于VIM中的Oper
      
    
    </summary>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>mysql笔记 (一)</title>
    <link href="http://yoursite.com/2018/02/01/mysql_notes_1/"/>
    <id>http://yoursite.com/2018/02/01/mysql_notes_1/</id>
    <published>2018-02-01T14:59:05.000Z</published>
    <updated>2018-02-01T16:46:23.669Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="#%E5%B1%82%E7%BA%A7%E7%BB%93%E6%9E%84">层级结构</a></li><li><a href="#%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E">存储引擎</a><ul><li><a href="#myisam">MyISAM</a><ul><li><a href="#%E7%B4%A2%E5%BC%95%E6%94%AF%E6%8C%81">索引支持</a></li></ul></li><li><a href="#innodb">InnoDB</a><ul><li><a href="#%E4%B8%BB%E8%A6%81%E7%89%B9%E6%80%A7">主要特性</a></li></ul></li></ul></li><li><a href="#%E6%9D%83%E9%99%90%E7%BA%A7%E5%88%AB">权限级别</a><ul><li><a href="#global-level">Global Level</a></li><li><a href="#database-level">Database Level</a></li><li><a href="#tabel-level">Tabel Level</a></li><li><a href="#column-level">Column Level</a></li><li><a href="#routine-level">Routine Level</a></li><li><a href="#grant">GRANT</a></li></ul></li></ul><h1 id="层级结构"><a href="#层级结构" class="headerlink" title="层级结构"></a>层级结构</h1><p><strong>Sql Layer</strong> 负责查询相关, <strong>Storage Engine Layer</strong> 底层数据存储相关</p><p>将存储与计算分离</p><p><img src="/images/mysql_layer.png" alt="mysql_layer.png"></p><h1 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h1><h2 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h2><h3 id="索引支持"><a href="#索引支持" class="headerlink" title="索引支持"></a>索引支持</h3><ol><li>B-Tree<ul><li>按照 <em>B-Tree</em> 结构存储数据</li></ul></li><li>R-Tree<ul><li>设计用于为存储空间和多维数据的字段做索引 (暂时不是很明白这段话的意思)</li></ul></li><li>Full-Text<ul><li>全文检索, 提高 <em>LIKE</em> 查询的效率</li></ul></li></ol><h2 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h2><h3 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h3><ol><li>支持事务安全</li><li>数据多版本读取</li><li>锁定机制改进<ul><li>改变了MyISAM的锁机制实现了行锁</li></ul></li><li>实现外建</li></ol><h1 id="权限级别"><a href="#权限级别" class="headerlink" title="权限级别"></a>权限级别</h1><h2 id="Global-Level"><a href="#Global-Level" class="headerlink" title="Global Level"></a>Global Level</h2><p>全局级别, <strong>拥有最高优先级</strong></p><p><code>*.*</code> 表示全局作用域</p><p>示例:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">UPDATE</span>,<span class="keyword">DELETE</span>,<span class="keyword">INSERT</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'def'</span>@<span class="string">'localhost'</span>;</span><br></pre></td></tr></table></figure><h2 id="Database-Level"><a href="#Database-Level" class="headerlink" title="Database Level"></a>Database Level</h2><p><code>database.*</code> 表示数据库级别作用域</p><p>示例:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALTER</span> <span class="keyword">ON</span> test.* <span class="keyword">TO</span> <span class="string">'def'</span>@<span class="string">'localhost'</span>;</span><br></pre></td></tr></table></figure><p>也可以先选定数据库, 然后通过 <code>*</code> 来限定作用域为当前数据库, 如:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">DROP</span> <span class="keyword">ON</span> * <span class="keyword">TO</span> <span class="string">'def'</span>@<span class="string">'localhost'</span>;</span><br></pre></td></tr></table></figure><p>多个用户可以用逗号隔开:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> <span class="keyword">ON</span> perf.* <span class="keyword">TO</span> <span class="string">'abc'</span>@<span class="string">'localhost'</span>,<span class="string">'def'</span>@<span class="string">'localhost'</span>;</span><br></pre></td></tr></table></figure><h2 id="Tabel-Level"><a href="#Tabel-Level" class="headerlink" title="Tabel Level"></a>Tabel Level</h2><p><code>database.table</code> 表级别作用域</p><p>示例:</p><p>其中 <em>%</em> 表示通配符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">INDEX</span> <span class="keyword">ON</span> test.t1 <span class="keyword">TO</span> <span class="string">'abc'</span>@<span class="string">'%.jianzhaoyang.com'</span>;</span><br></pre></td></tr></table></figure><h2 id="Column-Level"><a href="#Column-Level" class="headerlink" title="Column Level"></a>Column Level</h2><p>列级别, 语法与 <em>Table Level</em> 相似, 只是需要在括号中指定列</p><p>示例:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>(<span class="keyword">id</span>,<span class="keyword">value</span>) <span class="keyword">ON</span> test.t2 <span class="keyword">TO</span> <span class="string">'abc'</span>@<span class="string">'%.jianzhaoyang.com'</span>;</span><br></pre></td></tr></table></figure><h2 id="Routine-Level"><a href="#Routine-Level" class="headerlink" title="Routine Level"></a>Routine Level</h2><p>主要针对 <em>procedure</em> 和 <em>function</em></p><h2 id="GRANT"><a href="#GRANT" class="headerlink" title="GRANT"></a>GRANT</h2><p>特殊权限, 拥有该权限的用户可以将 <strong>自身</strong> 拥有的权限赋予其他用户</p><p>示例:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">ON</span> test.t5 <span class="keyword">TO</span> <span class="string">'abc'</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%B1%82%E7%BA%A7%E7%BB%93%E6%9E%84&quot;&gt;层级结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E&quot;&gt;存储引擎&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
</feed>
